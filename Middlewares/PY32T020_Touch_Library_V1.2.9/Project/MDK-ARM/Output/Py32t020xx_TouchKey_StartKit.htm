<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\Py32t020xx_TouchKey_StartKit.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\Py32t020xx_TouchKey_StartKit.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue May 21 11:03:01 2024
<BR><P>
<H3>Maximum Stack Usage =        220 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; TK_MainFsm &rArr; TK_Init &rArr; TK_RegisterCfg &rArr; TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_COMP_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[1b]">APP_TouchKeyFlagsMask</a> from tk_user.o(i.APP_TouchKeyFlagsMask) referenced from tk_user.o(i.TK_UserParaInit)
 <LI><a href="#[1d]">APP_TouchShieldFlagsMask</a> from tk_user.o(i.APP_TouchShieldFlagsMask) referenced from tk_user.o(i.TK_UserParaInit)
 <LI><a href="#[1c]">APP_TouchWaterFlagsMask</a> from tk_user.o(i.APP_TouchWaterFlagsMask) referenced from tk_user.o(i.TK_UserParaInit)
 <LI><a href="#[9]">EXTI0_1_IRQHandler</a> from gpio.o(i.EXTI0_1_IRQHandler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[a]">EXTI2_3_IRQHandler</a> from gpio.o(i.EXTI2_3_IRQHandler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[b]">EXTI4_15_IRQHandler</a> from gpio.o(i.EXTI4_15_IRQHandler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[19]">EnterStop_Callback</a> from tk_user.o(i.EnterStop_Callback) referenced from tk_user.o(i.TK_UserParaInit)
 <LI><a href="#[1a]">ExitStop_Callback</a> from tk_user.o(i.ExitStop_Callback) referenced from tk_user.o(i.TK_UserParaInit)
 <LI><a href="#[7]">FLASH_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[11]">I2C1_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[8]">RCC_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[6]">RTC_IRQHandler</a> from tk_user.o(i.RTC_IRQHandler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[17]">SystemInit</a> from system_py32t020.o(i.SystemInit) referenced from startup_py32t020xx.o(.text)
 <LI><a href="#[10]">TIM14_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[e]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[f]">TIM1_CC_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[c]">TK_IRQHandler</a> from tk_user.o(i.TK_IRQHandler) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[15]">UART1_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[13]">UART3_IRQHandler</a> from startup_py32t020xx.o(.text) referenced from startup_py32t020xx.o(RESET)
 <LI><a href="#[18]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32t020xx.o(.text)
 <LI><a href="#[16]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[18]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[68]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[69]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[6c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32t020xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Filtering
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SingleAcqRawDatas
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDataProc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimLp
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrim
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[20]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetArea
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDifferCalc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDataProc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchWaterFlagsMask
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
</UL>

<P><STRONG><a name="[22]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
</UL>

<P><STRONG><a name="[6f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[23]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[70]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>EXTI0_15_IRQHandlerCallback</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, drivers.o(i.EXTI0_15_IRQHandlerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[9]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EXTI0_1_IRQHandler &rArr; EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EXTI2_3_IRQHandler &rArr; EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gpio.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EXTI4_15_IRQHandler &rArr; EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_15_IRQHandlerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>Get_InsideDif</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, tk_lib.o(i.Get_InsideDif))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_InsideDif
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyFlagsGenerate
</UL>

<P><STRONG><a name="[5d]"></a>HighSensitvityChs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tk_lib.o(i.HighSensitvityChs))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetSenseStart
</UL>

<P><STRONG><a name="[6]"></a>RTC_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tk_user.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SysTick_Handler &rArr; TK_TimerHandler &rArr; TK_TickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_drivers_timer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TimerHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, system_py32t020.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[17]"></a>SystemInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_py32t020.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>TK_CsdIdacTrimChs</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, py32t020_tk.o(i.TK_CsdIdacTrimChs))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotosleep
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetSenseStart
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrim
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
</UL>

<P><STRONG><a name="[5f]"></a>TK_GetVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tk_lib.o(i.TK_GetVersion))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_UserParaInit
</UL>

<P><STRONG><a name="[c]"></a>TK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tk_user.o(i.TK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TK_IRQHandler &rArr; TK_LibIRQHandler &rArr; TK_IRQHandlerCallback &rArr; TK_MultiChAcqNext &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32t020xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TK_IRQHandlerCallback</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, tk_lib.o(i.TK_IRQHandlerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TK_IRQHandlerCallback &rArr; TK_MultiChAcqNext &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqNext
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibIRQHandler
</UL>

<P><STRONG><a name="[50]"></a>TK_Init</STRONG> (Thumb, 1294 bytes, Stack size 32 bytes, tk_lib.o(i.TK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = TK_Init &rArr; TK_RegisterCfg &rArr; TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_UserParaInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RegisterCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>TK_LibIRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, py32t020_tk.o(i.TK_LibIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TK_LibIRQHandler &rArr; TK_IRQHandlerCallback &rArr; TK_MultiChAcqNext &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IRQHandlerCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>TK_LibInit</STRONG> (Thumb, 538 bytes, Stack size 24 bytes, py32t020_tk.o(i.TK_LibInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrim
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RegisterCfg
</UL>

<P><STRONG><a name="[4a]"></a>TK_LpDeInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, py32t020_tk.o(i.TK_LpDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TK_LpDeInit &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_EnterStop
</UL>

<P><STRONG><a name="[49]"></a>TK_LpInit</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, py32t020_tk.o(i.TK_LpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TK_LpInit &rArr; Timer_RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_EnterStop
</UL>

<P><STRONG><a name="[58]"></a>TK_MainFsm</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, tk_lib.o(i.TK_MainFsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = TK_MainFsm &rArr; TK_Init &rArr; TK_RegisterCfg &rArr; TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Filtering
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_EnterStop
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugDataUpdate
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyFlagsGenerate
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDifferCalc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDataProc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetBaseLineAll
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqStart
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>TK_RegisterCfg</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, tk_user.o(i.TK_RegisterCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = TK_RegisterCfg &rArr; TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibInit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
</UL>

<P><STRONG><a name="[43]"></a>TK_SetLfsrw</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, py32t020_tk.o(i.TK_SetLfsrw))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrim
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqStart
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqNext
</UL>

<P><STRONG><a name="[45]"></a>TK_SetSenseStart</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, py32t020_tk.o(i.TK_SetSenseStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighSensitvityChs
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimChs
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqStart
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqNext
</UL>

<P><STRONG><a name="[3c]"></a>TK_TimerHandler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, tk_lib.o(i.TK_TimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TK_TimerHandler &rArr; TK_TickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[31]"></a>TK_UpdatBaseLineData</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, tk_lib.o(i.TK_UpdatBaseLineData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TK_UpdatBaseLineData &rArr; TK_SetAreaConfirmCNT
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetAreaConfirmCNT
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyFlagsGenerate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_WinDetection
</UL>

<P><STRONG><a name="[51]"></a>TK_UserParaInit</STRONG> (Thumb, 464 bytes, Stack size 24 bytes, tk_user.o(i.TK_UserParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TK_UserParaInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
</UL>

<P><STRONG><a name="[57]"></a>Timer_RTC_Init</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, py32t020_tk.o(i.Timer_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Timer_RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetEnableIRQ
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_WaitForSynchro
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_ExitInitMode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpInit
</UL>

<P><STRONG><a name="[71]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[72]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[73]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[65]"></a>app_drivers_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drivers.o(i.app_drivers_init))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>app_drivers_loop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drivers.o(i.app_drivers_loop))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>app_drivers_timer</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drivers.o(i.app_drivers_timer))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[46]"></a>gotosleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32t020_tk.o(i.gotosleep))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_EnterStop
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimChs
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimLp
</UL>

<P><STRONG><a name="[16]"></a>main</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = main &rArr; TK_MainFsm &rArr; TK_Init &rArr; TK_RegisterCfg &rArr; TK_LibInit &rArr; TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_drivers_loop
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_drivers_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3f]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[3d]"></a>SystemClockConfig</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, main.o(i.SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemClockConfig &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[1b]"></a>APP_TouchKeyFlagsMask</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tk_user.o(i.APP_TouchKeyFlagsMask))
<BR>[Address Reference Count : 1]<UL><LI> tk_user.o(i.TK_UserParaInit)
</UL>
<P><STRONG><a name="[1d]"></a>APP_TouchShieldFlagsMask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tk_user.o(i.APP_TouchShieldFlagsMask))
<BR>[Address Reference Count : 1]<UL><LI> tk_user.o(i.TK_UserParaInit)
</UL>
<P><STRONG><a name="[1c]"></a>APP_TouchWaterFlagsMask</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tk_user.o(i.APP_TouchWaterFlagsMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_TouchWaterFlagsMask &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tk_user.o(i.TK_UserParaInit)
</UL>
<P><STRONG><a name="[19]"></a>EnterStop_Callback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tk_user.o(i.EnterStop_Callback))
<BR>[Address Reference Count : 1]<UL><LI> tk_user.o(i.TK_UserParaInit)
</UL>
<P><STRONG><a name="[1a]"></a>ExitStop_Callback</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tk_user.o(i.ExitStop_Callback))
<BR>[Address Reference Count : 1]<UL><LI> tk_user.o(i.TK_UserParaInit)
</UL>
<P><STRONG><a name="[41]"></a>TK_CsdIdacTrim</STRONG> (Thumb, 594 bytes, Stack size 32 bytes, py32t020_tk.o(i.TK_CsdIdacTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = TK_CsdIdacTrim &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetLfsrw
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimChs
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimLp
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibInit
</UL>

<P><STRONG><a name="[44]"></a>TK_CsdIdacTrimLp</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, py32t020_tk.o(i.TK_CsdIdacTrimLp))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TK_CsdIdacTrimLp &rArr; TK_LPSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotosleep
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LPSenseStart
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrim
</UL>

<P><STRONG><a name="[47]"></a>TK_LPSenseStart</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, py32t020_tk.o(i.TK_LPSenseStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TK_LPSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nop_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimLp
</UL>

<P><STRONG><a name="[63]"></a>TK_RTC_EnterInitMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32t020_tk.o(i.TK_RTC_EnterInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>

<P><STRONG><a name="[64]"></a>TK_RTC_ExitInitMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32t020_tk.o(i.TK_RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>

<P><STRONG><a name="[62]"></a>TK_RTC_WaitForSynchro</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32t020_tk.o(i.TK_RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>

<P><STRONG><a name="[61]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, py32t020_tk.o(i.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>

<P><STRONG><a name="[55]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32t020_tk.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibInit
</UL>

<P><STRONG><a name="[60]"></a>__NVIC_GetEnableIRQ</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, py32t020_tk.o(i.__NVIC_GetEnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_RTC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__RTC_DeInit
</UL>

<P><STRONG><a name="[56]"></a>__RTC_DeInit</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, py32t020_tk.o(i.__RTC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __RTC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetEnableIRQ
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_WaitForSynchro
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_ExitInitMode
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpDeInit
</UL>

<P><STRONG><a name="[53]"></a>nop_delay</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, py32t020_tk.o(i.nop_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetSenseStart
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpDeInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LPSenseStart
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LibInit
</UL>

<P><STRONG><a name="[2b]"></a>APP_TouchKeyDataProc</STRONG> (Thumb, 512 bytes, Stack size 32 bytes, tk_lib.o(i.APP_TouchKeyDataProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = APP_TouchKeyDataProc &rArr; TK_GetArea &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetArea
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetAreaConfirmCNT
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[2e]"></a>APP_TouchKeyDifferCalc</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tk_lib.o(i.APP_TouchKeyDifferCalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = APP_TouchKeyDifferCalc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[2f]"></a>APP_TouchKeyFlagsGenerate</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, tk_lib.o(i.APP_TouchKeyFlagsGenerate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = APP_TouchKeyFlagsGenerate &rArr; TK_UpdatBaseLineData &rArr; TK_SetAreaConfirmCNT
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DifferLev
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_UpdatBaseLineData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_InsideDif
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[33]"></a>APP_TouchShieldProc</STRONG> (Thumb, 654 bytes, Stack size 40 bytes, tk_lib.o(i.APP_TouchShieldProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_TouchShieldProc &rArr; Get_SingleAcqRawDatas &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShieldState
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SingleAcqRawDatas
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RawDatasBufMax
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DifferLev
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[37]"></a>APP_TouchSliderOrWheelProc</STRONG> (Thumb, 1130 bytes, Stack size 72 bytes, tk_lib.o(i.APP_TouchSliderOrWheelProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = APP_TouchSliderOrWheelProc &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShieldState
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SingleAcqRawDatas
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RawDatasBufMax
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[5b]"></a>DebugDataUpdate</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tk_lib.o(i.DebugDataUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DebugDataUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[32]"></a>Get_DifferLev</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, tk_lib.o(i.Get_DifferLev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Get_DifferLev
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyFlagsGenerate
</UL>

<P><STRONG><a name="[35]"></a>Get_RawDatasBufMax</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, tk_lib.o(i.Get_RawDatasBufMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Get_RawDatasBufMax
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
</UL>

<P><STRONG><a name="[36]"></a>Get_SingleAcqRawDatas</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tk_lib.o(i.Get_SingleAcqRawDatas))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_SingleAcqRawDatas &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
</UL>

<P><STRONG><a name="[34]"></a>ShieldState</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, tk_lib.o(i.ShieldState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ShieldState
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchSliderOrWheelProc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchShieldProc
</UL>

<P><STRONG><a name="[48]"></a>TK_EnterStop</STRONG> (Thumb, 456 bytes, Stack size 48 bytes, tk_lib.o(i.TK_EnterStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TK_EnterStop &rArr; TK_MultiChAcqStart &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gotosleep
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_LpDeInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultiChAcqStart
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[5a]"></a>TK_FilterInit</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, tk_lib.o(i.TK_FilterInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TK_FilterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[4c]"></a>TK_Filtering</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, tk_lib.o(i.TK_Filtering))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TK_Filtering &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[2c]"></a>TK_GetArea</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tk_lib.o(i.TK_GetArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TK_GetArea &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDataProc
</UL>

<P><STRONG><a name="[4f]"></a>TK_MultiChAcqNext</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, tk_lib.o(i.TK_MultiChAcqNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TK_MultiChAcqNext &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetSenseStart
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetLfsrw
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IRQHandlerCallback
</UL>

<P><STRONG><a name="[4b]"></a>TK_MultiChAcqStart</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, tk_lib.o(i.TK_MultiChAcqStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TK_MultiChAcqStart &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetSenseStart
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetLfsrw
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_EnterStop
</UL>

<P><STRONG><a name="[2d]"></a>TK_SetAreaConfirmCNT</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tk_lib.o(i.TK_SetAreaConfirmCNT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TK_SetAreaConfirmCNT
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TouchKeyDataProc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_UpdatBaseLineData
</UL>

<P><STRONG><a name="[59]"></a>TK_SetBaseLineAll</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, tk_lib.o(i.TK_SetBaseLineAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TK_SetBaseLineAll
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>

<P><STRONG><a name="[5e]"></a>TK_TickHandler</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, tk_lib.o(i.TK_TickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TK_TickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TimerHandler
</UL>

<P><STRONG><a name="[5c]"></a>TK_WinDetection</STRONG> (Thumb, 540 bytes, Stack size 40 bytes, tk_lib.o(i.TK_WinDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = TK_WinDetection &rArr; TK_CsdIdacTrimChs &rArr; TK_SetSenseStart &rArr; nop_delay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetLfsrw
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_CsdIdacTrimChs
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_UpdatBaseLineData
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MainFsm
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
